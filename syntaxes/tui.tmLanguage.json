{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "tui",
  "patterns": [{ "include": "#statement" }],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line.double-slash.tui",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.line.number-sign.tui",
          "begin": "#",
          "end": "$"
        }
      ]
    },
    "statement": {
      "patterns": [
        { "include": "#comment" },
        { "include": "#keyword" },
        { "include": "#expression" }
      ]
    },
    "keyword": {
      "patterns": [
        {
          "match": "\\b(if|elseif|else|for|return)\\b",
          "name": "keyword.control.tui"
        },
        {
          "match": "\\b(function)\\b",
          "name": "keyword.other.tui"
        }
      ]
    },
    "expression": {
      "patterns": [
        { "include": "#invocation-expression" },
        { "include": "#member-access-expression" },
        { "include": "#literal" },
        { "include": "#identifier" }
      ]
    },
    "literal": {
      "patterns": [
        { "include": "#language-constant-literal" },
        { "include": "#numeric-literal" },
        { "include": "#string-literal" }
      ]
    },
    "language-constant-literal": {
      "match": "\\b(nil|null|true|false)\\b",
      "captures": {
        "1": {
          "name": "constant.language.tui"
        }
      }
    },
    "numeric-literal": {
      "match": "\\b([0-9]+(\\.[0-9]+)?)\\b",
      "captures": {
        "1": {
          "name": "constant.numeric.tui"
        }
      }
    },
    "string-literal": {
      "patterns": [
        {
          "name": "string.quoted.double.tui",
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.tui"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.tui"
            }
          }
        }
      ]
    },
    "invocation-expression": {
      "match": "(?:(\\.)\\s*)?([_[:alpha:]][_[:alnum:]]*)\\s*(?=\\()",
      "captures": { "2": { "name": "entity.name.function.tui" } }
    },
    "member-access-expression": {
      "match": "(\\.)\\s*([_[:alpha:]][_[:alnum:]]*)\\s*(?!\\()",
      "captures": { "2": { "name": "variable.other.object.property.tui" } }
    },
    "identifier": {
      "match": "[_[:alpha:]][_[:alnum:]]*",
      "captures": {
        "0": { "name": "variable.other.tui" }
      }
    }
  },
  "scopeName": "source.tui"
}
